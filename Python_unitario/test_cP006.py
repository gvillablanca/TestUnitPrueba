# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestCP006():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_cP006(self):
    self.driver.get("http://localhost/control/login.php")
    self.driver.set_window_size(974, 1040)
    self.driver.find_element(By.NAME, "user_name").send_keys("admin")
    self.driver.find_element(By.NAME, "user_password").send_keys("admin")
    self.driver.find_element(By.NAME, "user_password").send_keys(Keys.ENTER)
    self.driver.find_element(By.CSS_SELECTOR, ".col-lg-2:nth-child(1) .img-responsive").click()
    self.driver.find_element(By.LINK_TEXT, "Editar").click()
    element = self.driver.find_element(By.LINK_TEXT, "Editar")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    element = self.driver.find_element(By.ID, "mod_stock")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.ID, "mod_stock")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.ID, "mod_stock")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    self.driver.find_element(By.ID, "mod_stock").click()
    element = self.driver.find_element(By.ID, "mod_stock")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.ID, "mod_stock")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.ID, "mod_stock")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    self.driver.find_element(By.ID, "mod_stock").click()
    self.driver.find_element(By.CSS_SELECTOR, "#myModal2 .btn-default").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(3) > td:nth-child(2)").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(3) > td:nth-child(2)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".col-sm-6:nth-child(9) img").click()
    self.driver.find_element(By.ID, "quantity").click()
    self.driver.find_element(By.ID, "quantity").send_keys("450")
    self.driver.find_element(By.CSS_SELECTOR, "#add-stock .btn-primary").click()
    self.driver.find_element(By.LINK_TEXT, "Salir").click()
    self.driver.find_element(By.NAME, "user_name").send_keys("admin")
    self.driver.find_element(By.NAME, "user_password").click()
    self.driver.find_element(By.NAME, "user_password").send_keys("admin")
    self.driver.find_element(By.ID, "submit").click()
    self.driver.find_element(By.CSS_SELECTOR, ".col-lg-2:nth-child(2) .img-responsive").click()
    self.driver.find_element(By.CSS_SELECTOR, ".col-sm-6:nth-child(10) img").click()
    self.driver.find_element(By.ID, "quantity_remove").click()
    self.driver.find_element(By.ID, "quantity_remove").send_keys("15")
    self.driver.find_element(By.ID, "reference_remove").click()
    self.driver.find_element(By.ID, "reference_remove").send_keys("S001")
    self.driver.find_element(By.CSS_SELECTOR, "#remove-stock .btn-primary").click()
    self.driver.find_element(By.CSS_SELECTOR, ".col-sm-12:nth-child(5)").click()
    self.driver.find_element(By.LINK_TEXT, "Salir").click()
  
